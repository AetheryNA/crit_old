generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id       Int    @id @default(autoincrement())
  avatar_url String
  username String @unique @db.VarChar(255)
  password String @db.VarChar(255)
  email    String @unique @db.VarChar(255)
  posts    posts[]
  usersRelationships_users UsersRelationships[] @relation("userList")
  usersRelationships_friends UsersRelationships[] @relation("friendList")
  shares   shares[]
  likes    likes[]
  lobby    lobby[]
}

model posts {
  post_id Int @id @default(autoincrement())
  user_id Int
  author users @relation(fields: [user_id], references: [id]) 
  image_url String
  content String
  like_count Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  shares shares[]
  reshare Int 
  likes likes[]
  total_social_count Int @default(0)
}

model UsersRelationships {
  id Int @id @default(autoincrement())
  user users @relation("userList", fields: [user_id], references: [id])
  friends users @relation("friendList", fields: [friend_id], references: [id])
  user_id Int
  friend_id Int
  type Friend_Type @default(FRIEND)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt 
}

model shares {
  id Int @id @default(autoincrement())
  user users @relation(fields: [user_id], references: [id])
  user_id Int
  post posts @relation(fields: [post_id], references: [post_id])
  post_id Int
}

model likes {
  id Int @id @default(autoincrement())
  user users @relation(fields: [user_id], references: [id])
  user_id Int
  post posts @relation(fields: [post_id], references: [post_id])
  post_id Int
  isLiked Boolean @default(false)
}

model lobby {
  lobby_id Int @id @default(autoincrement())
  lobby_name String
  user users @relation(fields: [owner_id], references: [id])
  owner_id Int
  joined_users Int[]
}

enum Friend_Type {
  FRIEND
  NOT_ASSOCIATED
}
